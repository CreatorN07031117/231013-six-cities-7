openapi: '3.0.2'
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: users
    description: Действия с пользователем.
  - name: comments
    description: Действия с комментариями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true

      responses:
        "200":
          description: Пользователь авторизовался. Токен пользователя.
          content:
            application/json: {}

        "404":
          description: Пользователь с таким email не найден.
          links:
            create:
              operationId: register
              description: Создать нового пользователя
              parameters:
                  name: body
                  in: body
                  required: true
                  schema:
                    $ref: '#/components/schemas/createUser'
        "403":
          description: Пользователь ввел пароль неверно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: authorized

        "403":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: unauthorized

  /users/{userId}/update:
    post:
      tags:
        - users
      summary: Изменения данных пользователя

      requestBody:
        description: Измененные данные пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUser'
        required: true

      responses:
        "201":
          description: Данные пользователя изменены. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "404":
          description: Пользователь с таким ID не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /offers/create:
    post:
      tags:
        - offers
      summary: Создание объявления
      description: Создает новое объявление.

      requestBody:
        description: Информация для создания нового объявления.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "422":
          description: Неверные данные в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /offers:
    get:
      tags:
        - offers
      summary: Получение списка офферов
      parameters:
        - name: limit
          in: query
          description: Максимальное количество офферов для возврата
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100

      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                minItems: 1
                items:
                  $ref: '#/components/schemas/offer'

        "400":
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /offers/{offerId}/update:
    post:
      tags:
        - offers
      summary: Изменения данных объявления

      requestBody:
        description: Измененные данные объявления.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOffer'
        required: true

      responses:
        "201":
          description: Данные объявлени изменены. Объект объявления.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "404":
          description:  Объявление с таким ID не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /offers/{offerId}/delete:
    get:
      tags:
        - offers
      summary: Удаляет объявление

      responses:
        "200":
          description: Объявление удалено.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: delete

        "403":
          description: Недостаточно прав для совершения операции.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

        "404":
          description: Объявление с таким ID не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /comments/{offerId}/create:
    post:
      tags:
        - comments
      summary: Создает новый комментарий
      description: Создает новый комментарий.

      requestBody:
        description: Информация для создания нового комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createСomment'
        required: true

      responses:
        "201":
          description: Комментарий создан. Объект комментария.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

        "422":
          description: Неверные данные в запросе
          content:
            application/json: {}

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        type:
          type: string
          example: Pro
          enum:
            - Ordinary
            - Pro

        avatar:
          type: string
          example: avatar.jpg

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        email:
          type: string
          example: mail@example.com

    updateUser:
      type: object

      properties:
        name?:
          type: string
          example: Клод Моне

        avatar?:
          type: string
          example: avatar.jpg

        type?:
          type: string
          enum:
            - Pro
            - Ordinary
          example: Pro

        password?:
          type: string
          example: 123456

    offer:
      type: object

      properties:
        title:
          type: string
          example: Отель в историческом центре

        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    createOffer:
      type: object

      properties:
        title:
          type: string
          example: Отель в историческом центре

        description:
          type: string
          example: Перкасный отель в историческом центре Брюсселя. Рядом все основые достопримечательности

        publicDate:
          type: string
          format: Date
          example: 2023-01-08T06:24:40.283Z

        city:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Brussels

        previewImg:
          type: string
          example: preview.jpg

        photos:
          type: array
          maxItems: 6
          example: ["pic1.jpg", "pic2.jpg", "pic3.jpg", "pic4.jpg", "pic5.jpg", "pic6.jpg"]

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: true

        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 1.45

        offerType:
          type: string
          enum:
            - apartment
            - house
            - room
            - hotel
          example: room

        numberOfRooms:
          type: integer
          format: int32
          maximum: 8
          minimum: 1
          example: 3

        numberOfGuests:
          type: integer
          format: int32
          maximum: 10
          minimum: 1
          example: 6

        rentPrice:
          type: integer
          format: int32
          maximum: 100000
          minimum: 100
          example: 32000

        features:
          type: array
          enum:
            - Breakfast
            - Air conditioning
            - Laptop friendly workspace
            - Baby seat
            - Washer
            - Towels
            - Fridge
          example: [ "Breakfast", "Laptop friendly workspace"]

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        numberOfComments:
          type: integer
          format: int32
          minimum: 0
          example: 6

        location:
          type: object
          properties:
            ln:
              type: number
              example: 52.23452
            lt:
              type: number
              example: 43.56739

    updateOffer:
      type: object

      properties:
        title?:
          type: string
          example: Отель в историческом центре

        description?:
          type: string
          example: Перкасный отель в историческом центре Брюсселя. Рядом все основые достопримечательности

        city?:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Brussels

        previewImg?:
          type: string
          example: preview.jpg

        photos?:
          type: array
          maxItems: 6
          example: ["pic1.jpg", "pic2.jpg", "pic3.jpg", "pic4.jpg", "pic5.jpg", "pic6.jpg"]

        isPremium?:
          type: boolean
          example: true

        isFavorite?:
          type: boolean
          example: true

        offerType?:
          type: string
          enum:
            - apartment
            - house
            - room
            - hotel
          example: room

        numberOfRooms?:
          type: integer
          format: int32
          maximum: 8
          minimum: 1
          example: 3

        numberOfGuests?:
          type: integer
          format: int32
          maximum: 10
          minimum: 1
          example: 6

        rentPrice?:
          type: integer
          format: int32
          maximum: 100000
          minimum: 100
          example: 32000

        features?:
          type: array
          maxItems: 7
          enum:
            - Breakfast
            - Air conditioning
            - Laptop friendly workspace
            - Baby seat
            - Washer
            - Towels
            - Fridge
          example: [ "Breakfast", "Laptop friendly workspace"]

        location?:
          type: object
          properties:
            ln:
              type: number
              example: 52.23452
            lt:
              type: number
              example: 43.56739

    error:
      type: object

      properties:
        status:
          type: string
          example: error

        error:
          type: object

          properties:
            code:
              type: string
              example: "<код ошибки>"

            message:
              type: string
              example: "<детали ошибки>"

    createСomment:
      type: object

      properties:
        rating:
          type: integer
          format: int32
          maximum: 1
          minimum: 5
          example: 4

        content:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.

        publicDate:
          type: string
          format: Date
          example: 2023-01-08T06:24:40.283Z

        offerId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    comment:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        publicDate:
          type: string
          format: Date
          example: 2023-01-08T06:24:40.283Z




